Resources:

#vpc creation with the given Cidr Block 
   IntegreatVPC:
     Type: AWS::EC2::VPC
     Properties:
       CidrBlock: 172.17.16.0/22
       EnableDnsSupport: 'true'
       EnableDnsHostnames: 'true'
       InstanceTenancy: default
       Tags:
        - Key: Name
          Value: VPC-perfios-16
 
#Public and private Subnets creation in the VPC  
   subnetperfios16publica:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.16.0/26
       AvailabilityZone: "ap-south-1a"
       Tags:
       - Key: Name
         Value: subnet-perfios-16-public-a
       MapPublicIpOnLaunch: true 


   subnetGWperfios16publica:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.16.64/26
       AvailabilityZone: "ap-south-1a"
       Tags:
       - Key: Name
         Value: subnet-GW-perfios-16-public-a
       MapPublicIpOnLaunch: true


   subnetwebperfios16privatea:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.16.128/25
       AvailabilityZone: "ap-south-1a"
       Tags:
       - Key: Name
         Value: subnet-web-perfios-16-private-a
       MapPublicIpOnLaunch: false

   
   subnetappperfios17privatea:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.17.0/25
       AvailabilityZone: "ap-south-1a"
       Tags:
       - Key: Name
         Value: subnet-app-perfios-17-private-a 
       MapPublicIpOnLaunch: false
       
     
   subnetdbperfios17privatea:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.17.128/27
       AvailabilityZone: "ap-south-1a"
       Tags:
       - Key: Name
         Value: subnet-db-perfios-17-private-a 
       MapPublicIpOnLaunch: false

    
   subnetnosqlperfios17privatea:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.17.160/27
       AvailabilityZone: "ap-south-1a"
       Tags:
       - Key: Name
         Value: subnet-nosql-perfios-17-private-a
       MapPublicIpOnLaunch: false 
       
 
    
   subnetperfios18publicb:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.18.0/26
       AvailabilityZone: "ap-south-1b"
       Tags:
       - Key: Name
         Value: subnet-perfios-18-public-b 
       MapPublicIpOnLaunch: true 

    
   subnetGWperfios18publicb:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.18.64/26
       AvailabilityZone: "ap-south-1b"
       Tags:
       - Key: Name
         Value: subnet-GW-perfios-18-public-b 
       MapPublicIpOnLaunch: true 
 

          
   subnetwebperfios18privateb:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.18.128/25
       AvailabilityZone: "ap-south-1b"
       Tags:
       - Key: Name
         Value: subnet-web-perfios-18-private-b 
       MapPublicIpOnLaunch: false 
       

   subnetappperfios19privateb:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.19.0/25
       AvailabilityZone: "ap-south-1b"
       Tags:
       - Key: Name
         Value: subnet-app-perfios-19-private-b 
       MapPublicIpOnLaunch: false 
  

   subnetdbperfios19privateb:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.19.128/27
       AvailabilityZone: "ap-south-1b"
       Tags:
       - Key: Name
         Value: subnet-db-perfios-19-private-b
       MapPublicIpOnLaunch: false 


   subnetnosqlperfios19privateb:
     Type: AWS::EC2::Subnet
     Properties:
       VpcId:
         Ref: IntegreatVPC
       CidrBlock: 172.17.19.160/27
       AvailabilityZone: "ap-south-1b"
       Tags:
       - Key: Name
         Value: subnet-nosql-perfios-19-private-b 
       MapPublicIpOnLaunch: false 


#Creating Internet Gateway and attaching to VPC
   InternetGateway:
     Type: AWS::EC2::InternetGateway
     Properties:
       Tags:
       - Key: Name
         Value: internet-gateway-perfios-16
   AttachGateway:
     Type: AWS::EC2::VPCGatewayAttachment
    # Notice how you can't attach an IGW to a VPC unless both are created:
     Properties:
       VpcId:
         Ref: IntegreatVPC
       InternetGatewayId: 
         Ref: InternetGateway


#Creating Public Routetable
   PublicRouteTable:
     Type: AWS::EC2::RouteTable
     Properties:
       VpcId:
         Ref: IntegreatVPC
       Tags:
       - Key: Name
         Value: route-table-perfios-16-public


   PublicRouteIgw:   # Public route table has direct routing to IGW:
     Type: AWS::EC2::Route
     Properties:
       RouteTableId:
         Ref: PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
          Ref: InternetGateway 

  
#Creating Elastic Ip 
   ElasticIPAddress:
     Type: AWS::EC2::EIP
     Properties:
       Domain: IntegreatVPC 
       Tags:
       - Key: Name
         Value: eip-perfios-16


#Creating NAT Gateway
   NATGateway:
     Type: AWS::EC2::NatGateway
     Properties:
       AllocationId: !GetAtt ElasticIPAddress.AllocationId
       SubnetId:
         Ref: subnetGWperfios16publica 
       Tags:
        - Key: Name
          Value: NAT-Gateway-perfios-16


#Creating Private Routetable
   PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: IntegreatVPC
      Tags:
       - Key: Name
         Value: route-table-perfios-16-private 


   PrivateRouteNAT:            # Private route table can access web via NAT (created below)
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      # Route traffic through the NAT Gateway:
      NatGatewayId:
        Ref: NATGateway



#Associating subnets to routetables
   subnetperfios16publicaRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetperfios16publica
       RouteTableId:
         Ref: PublicRouteTable


   subnetGWperfios16publicaRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
      SubnetId:
        Ref: subnetGWperfios16publica
      RouteTableId: 
        Ref: PublicRouteTable


   subnetwebperfios16privateaRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId: 
         Ref: subnetwebperfios16privatea
       RouteTableId:
         Ref: PrivateRouteTable


   subnetappperfios17privateaRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetappperfios17privatea
       RouteTableId: 
         Ref: PrivateRouteTable

   
   subnetdbperfios17privateaRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetdbperfios17privatea
       RouteTableId: 
         Ref: PrivateRouteTable
  

   subnetnosqlperfios17privateaRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetnosqlperfios17privatea
       RouteTableId: 
         Ref: PrivateRouteTable


   
   subnetperfios18publicbRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetperfios18publicb
       RouteTableId: 
         Ref: PublicRouteTable
 

   subnetGWperfios18publicbRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetGWperfios18publicb 
       RouteTableId: 
         Ref: PublicRouteTable

   
   subnetwebperfios18privatebRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetwebperfios18privateb 
       RouteTableId: 
         Ref: PrivateRouteTable


   
   subnetappperfios19privatebRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetappperfios19privateb 
       RouteTableId: 
         Ref: PrivateRouteTable

   

   subnetdbperfios19privatebRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetdbperfios19privateb 
       RouteTableId: 
         Ref: PrivateRouteTable


    
   subnetnosqlperfios19privatebRouteTableAssociation:
     Type: AWS::EC2::SubnetRouteTableAssociation
     Properties:
       SubnetId:
         Ref: subnetnosqlperfios19privateb 
       RouteTableId: 
         Ref: PrivateRouteTable
   
   
   

  
